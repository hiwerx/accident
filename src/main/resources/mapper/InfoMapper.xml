<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lq.accident.mapper.InfoMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.lq.accident.model.Info">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="date" property="date" />
        <result column="place" property="place" />
        <result column="province" property="province" />
        <result column="city" property="city" />
        <result column="area" property="area" />
        <result column="introduce" property="introduce" />
        <result column="injury_num" property="injuryNum" />
        <result column="death_num" property="deathNum" />
        <result column="missing_num" property="missingNum" />
        <result column="type" property="type" />
        <result column="reason" property="reason" />
        <result column="status" property="status" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <resultMap id="AllInfoMap" type="com.lq.accident.model.vo.InfoVO">
        <result column="id" property="id" />
        <result column="title" property="title" />
        <result column="date" property="date" />
        <result column="place" property="place" />
        <result column="province" property="province" />
        <result column="city" property="city" />
        <result column="area" property="area" />
        <result column="introduce" property="introduce" />
        <result column="injury_num" property="injuryNum" />
        <result column="death_num" property="deathNum" />
        <result column="missing_num" property="missingNum" />
        <result column="typeName" property="type" />
        <result column="reason" property="reason" />
        <result column="update_time" property="updateTime" />
        <collection property="tags" ofType="com.lq.accident.model.Tag">
            <result column="tagId" property="id" />
            <result column="tag" property="tag" />
        </collection>
        <collection property="sourceUrls" ofType="com.lq.accident.model.vo.InfoSourceVO">
            <result column="url" property="url" />
            <result column="url_title" property="urlTitle" />
            <result column="channel" property="channel" />
            <result column="source_date" property="sourceDate" />
        </collection>
    </resultMap>

    <select id="selectAllInfo" resultMap="AllInfoMap">
select ai.*, at.name typeName ,
       t.id tagId,t.tag,
    i.url,i.url_title, c.channel, i.source_date
from accident_info ai

    left join accident_type at on ai.type = at.id

    left join accident_tag atg on atg.info_id = ai.id
    left join tag t on t.id = atg.tag_id

    left join info_source i on ai.id = i.info_id
    left join channel c on i.channel_id = c.id
    where ai.status is null
        <if test="tagId != null">
            AND ai.id in (select atg1.info_id from accident_tag atg1 where atg1.tag_id = #{tagId})
        </if>
        <if test="startDate != null and endDate != null ">
            and ai.date between #{startDate} and #{endDate}
        </if>
        <if test="content != null">
            and (ai.introduce like #{content} or ai.reason like #{content})
        </if>
order by ai.date desc, source_date, t.id desc

    </select>
    <!--    拆掉多表联查，解决分页问题-->
    <select id="selectAllInfo1" resultMap="AllInfoMap">
        select distinct ai.*, at.name typeName
        --         t.id tagId,t.tag,
        --         i.url,i.url_title, c.channel, i.source_date
        from accident_info ai
        left join accident_type at on ai.type = at.id
        left join accident_tag atg on atg.info_id = ai.id
        left join tag t on t.id = atg.tag_id
        where ai.status is null
        <if test="dto.tagId != null">
            AND ai.id in (select atg1.info_id from accident_tag atg1 where atg1.tag_id = #{dto.tagId})
        </if>
        <if test="dto.startDate != null and dto.endDate != null ">
            and ai.date between #{dto.startDate} and #{dto.endDate}
        </if>
        <if test="dto.content != null">
            and (ai.introduce like #{dto.content} or ai.reason like #{dto.content})
        </if>
        order by ai.date desc
    </select>
</mapper>
